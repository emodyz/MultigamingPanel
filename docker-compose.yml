version: '3'
services:
    ezgames:
        build:
            context: .
            dockerfile: docker/app/Dockerfile
        image: emodyz/ezgames
        restart: always
        ports:
            - '80:80'
            - "443:443"
        environment:
            NGINX_HOST: '${EZG_HOST}'
        volumes:
            - '.:/var/www/app'
            - './docker/app/index.php:/var/www/test/index.php'
            - './docker/app/app.conf.template:/etc/nginx/templates/default.conf.template'
            - 'ezgames_tls:/etc/letsencrypt'
            - 'ezgames_nginx:/etc/nginx'
        networks:
            - ezgames
        depends_on:
            - php
            - pgsql
            - redis
            # - meilisearch
            # - smtp
    php:
        # TODO: Publish a pre-built container with the required php extensions
        build:
            context: .
            dockerfile: docker/php/Dockerfile
        image: emodyz/ezgames-php
        restart: always
        ports:
            - '9000:9000'
        volumes:
            - '.:/var/www/app'
            - './docker/app/index.php:/var/www/test/index.php'
            - 'ezgames_tls:/etc/letsencrypt'
        networks:
            - ezgames
    pgsql:
        image: postgres:13-alpine
        restart: always
        ports:
            - '${FORWARD_DB_PORT:-5432}:5432'
        environment:
            POSTGRES_DB: '${DB_DATABASE}'
            POSTGRES_USER: '${DB_USERNAME}'
            POSTGRES_PASSWORD: '${DB_PASSWORD:-secret}'
        volumes:
            - 'ezgames_pgsql:/var/lib/postgresql/data'
        networks:
            - ezgames
        healthcheck:
          test: ["CMD", "pg_isready", "-q", "-d", "${DB_DATABASE}", "-U", "${DB_USERNAME}"]
    redis:
        image: redis:6-alpine
        restart: always
        ports:
            - '${FORWARD_REDIS_PORT:-6379}:6379'
        volumes:
            - 'ezgames_redis:/data'
        networks:
            - ezgames
        healthcheck:
          test: ["CMD", "redis-cli", "ping"]
    #meilisearch:
    # TODO: Generate a masterKey for meilisearch : export MEILI_MASTER_KEY=xxx
    #    image: getmeili/meilisearch:latest
    #    restart: always
    #    ports:
    #        - '${FORWARD_MEILISEARCH_PORT:-7700}:7700'
    #    volumes:
    #        - 'ezgames_meilisearch:/data.ms'
    #    networks:
    #        - ezgames
    #smtp:
    #    image: boky/postfix:latest
    #    restart: always
    #    ports:
    #        - "587:587"
    #    environment:
    #        ALLOW_EMPTY_SENDER_DOMAINS: "yes"
    #    networks:
    #        - ezgames

networks:
    ezgames:
        driver: bridge
volumes:
    ezgames_nginx:
        driver: local
    ezgames_tls:
        driver: local
    ezgames_pgsql:
        driver: local
    ezgames_redis:
        driver: local
    ezgames_meilisearch:
        driver: local
